# In the Google Cloud Console, select Navigation menu > BigQuery.
# The Welcome message box opens. This message box provides a link to the quickstart guide and the release notes.
# Click Done.

## Task 1. Create a new dataset to store your tables
# In the left pane, click on the name of your BigQuery project (qwiklabs-gcp-xxxx).
# Click on the three dots next to your project name, then select Create dataset.
# Set the Dataset ID to ecommerce, leave all other options at their default values.
# Click Create dataset.


## Task 2. Create tables with date partitions
# create a new table and bind a date or timestamp column as a partition. 
# Before we do that, let's explore the data in the non-partitioned table first.
# Query web page analytics for a sample of visitors in 2017

***
#standardSQL
SELECT DISTINCT
  fullVisitorId,
  date,
  city,
  pageTitle
FROM `data-to-insights.ecommerce.all_sessions_raw`
WHERE date = '20170708'
LIMIT 5


# Query web page analytics for a sample of visitors in 2018

***
#standardSQL
SELECT DISTINCT
  fullVisitorId,
  date,
  city,
  pageTitle
FROM `data-to-insights.ecommerce.all_sessions_raw`
WHERE date = '20180708'
LIMIT 5


# Create a new partitioned table based on date
***
#standardSQL
 CREATE OR REPLACE TABLE ecommerce.partition_by_day
 PARTITION BY date_formatted
 OPTIONS(
   description="a table partitioned by date"
 ) AS

 SELECT DISTINCT
 PARSE_DATE("%Y%m%d", date) AS date_formatted,
 fullvisitorId
 FROM `data-to-insights.ecommerce.all_sessions_raw`


# Click on the Details tab



## Task 3. Review results from queries on a partitioned table
***
#standardSQL
SELECT *
FROM `data-to-insights.ecommerce.partition_by_day`
WHERE date_formatted = '2016-08-01'

# compare bytes:

***
#standardSQL
SELECT *
FROM `data-to-insights.ecommerce.partition_by_day`
WHERE date_formatted = '2018-07-08'




## Task 4. Create an auto-expiring partitioned table
# Explore the available NOAA weather data tables
# In the left menu, in Explorer, click on + Add and select Public datasets.
# Search for GSOD NOAA then select the dataset.
# Click on View Dataset.
# Scroll through the tables in the noaa_gsod dataset


# Your goal is to create a table that:
# Queries on weather data from 2018 onward
# Filters to only include days that have had some precipitation (rain, snow, etc.)
# Only stores each partition of data for 90 days from that partition's date (rolling window)

***
#standardSQL
 SELECT
   DATE(CAST(year AS INT64), CAST(mo AS INT64), CAST(da AS INT64)) AS date,
   (SELECT ANY_VALUE(name) FROM `bigquery-public-data.noaa_gsod.stations` AS stations
    WHERE stations.usaf = stn) AS station_name,  -- Stations may have multiple names
   prcp
 FROM `bigquery-public-data.noaa_gsod.gsod*` AS weather
 WHERE prcp < 99.9  -- Filter unknown values
   AND prcp > 0      -- Filter stations/days with no precipitation
   AND _TABLE_SUFFIX >= '2018'
 ORDER BY date DESC -- Where has it rained/snowed recently
 LIMIT 10



## Task 5. Your turn: create a partitioned table
# Modify the previous query to create a table with the below specifications:
# Table name: ecommerce.days_with_rain
# Use the date field as your PARTITION BY
# For OPTIONS, specify partition_expiration_days = 60
# Add the table description = "weather stations with precipitation, partitioned by day"

***
#standardSQL
 CREATE OR REPLACE TABLE ecommerce.days_with_rain
 PARTITION BY date
 OPTIONS (
   partition_expiration_days=60,
   description="weather stations with precipitation, partitioned by day"
 ) AS


 SELECT
   DATE(CAST(year AS INT64), CAST(mo AS INT64), CAST(da AS INT64)) AS date,
   (SELECT ANY_VALUE(name) FROM `bigquery-public-data.noaa_gsod.stations` AS stations
    WHERE stations.usaf = stn) AS station_name,  -- Stations may have multiple names
   prcp
 FROM `bigquery-public-data.noaa_gsod.gsod*` AS weather
 WHERE prcp < 99.9  -- Filter unknown values
   AND prcp > 0      -- Filter
   AND _TABLE_SUFFIX >= '2018'


# To confirm you are only storing data from 60 days in the past up until today, run the DATE_DIFF query 
# to get the age of your partitions, which are set to expire after 60 days.
***
#standardSQL
# avg monthly precipitation
SELECT
  AVG(prcp) AS average,
  station_name,
  date,
  CURRENT_DATE() AS today,
  DATE_DIFF(CURRENT_DATE(), date, DAY) AS partition_age,
  EXTRACT(MONTH FROM date) AS month
FROM ecommerce.days_with_rain
WHERE station_name = 'WAKAYAMA' #Japan
GROUP BY station_name, date, today, month, partition_age
ORDER BY date DESC; # most recent days first



## Task 6. Confirm the oldest partition_age is at or below 60 days
***
#standardSQL
# avg monthly precipitation

SELECT
  AVG(prcp) AS average,
  station_name,
  date,
  CURRENT_DATE() AS today,
  DATE_DIFF(CURRENT_DATE(), date, DAY) AS partition_age,
  EXTRACT(MONTH FROM date) AS month
FROM ecommerce.days_with_rain
WHERE station_name = 'WAKAYAMA' #Japan
GROUP BY station_name, date, today, month, partition_age
ORDER BY partition_age DESC

